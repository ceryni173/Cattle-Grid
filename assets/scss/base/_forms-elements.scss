// stop outline on focus
input:focus,
select:focus,
textarea:focus,
button:focus {
	outline: none;
}
// generic styling on input elements
input:not([type='checkbox']):not([type='radio']):not([type='button']):not([type='submit']),
textarea,
select {
	// add font awesome to font family for placeholders
	color: $body-font-color;
	font-family: $body-font-family;
	font-size: $body-font-size;
	font-weight: 300;
	min-height: $input-height;
	padding: 0;
	padding-left: ($small-space * 2);
	border: 1px solid $border;
	box-shadow: none;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	border-radius: 0;
	// style placeholder
	@include input-placeholder {
		color: $light;
		font-family: 'FontAwesome', $body-font-family;
		font-size: rem-calc(11);
		position: relative;
		padding: 0;
		top: 0px;
		transition: all, 250ms, ease-in;
		line-height: normal;
		@include z-index(main);
		// for safari only
		@media only screen and (-webkit-min-device-pixel-ratio: 1) {
			padding-top: 0px;
			line-height: rem-calc(12);
		}
	}
	// change the horrible yellow background to white in chrome
	&:-webkit-autofill {
		-webkit-box-shadow: 0 0 0px 1000px white inset!important;
		border: 1px solid #ccc;
		padding-left: ($small-space * 2);
		color: $body-font-color;
		font-family: $body-font-family!important;
		font-size: $body-font-size;
	}
	// hide placeholder on focus
	&:focus::-webkit-input-placeholder{
		color: transparent;
	}
}
// for focused elements
input:not([type='checkbox']):not([type='radio']):not([type='button']):focus,
select:focus,
textarea:focus {
	outline: none;
	box-shadow: 0 0 $small-space $light;
	-webkit-transition: box-shadow 0.5s, border-color 0.25s ease-in-out;
	transition: box-shadow 0.5s, border-color 0.25s ease-in-out;
	border: none !important;
}
textarea {
	resize: none;
	height: $hundred;
	box-shadow: none;
	padding: $small-space ($small-space * 2);
    font-size: $body-font-size;
	width: 100%;
}
label {
	color: $body-font-color;
	display: block;
	font-size: rem-calc(11);
	text-transform: uppercase;
	margin-bottom: $small-space;
	opacity: 0.6;
}
select {
	color: $light;
	width: 100%;
	height: $input-height;
	border: 1px solid $light;
	margin: 0 0 1.14286rem;
	font-size: rem-calc(12);
	font-family: inherit;
	line-height: normal;
	color: $body-font-color;
	background-color: #ffffff;
	-webkit-appearance: none;
	-moz-appearance: none;
	background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="32" height="24" viewBox="0 0 32 24"><polygon points="0,0 32,0 16,24" style="fill: rgb%2834, 34, 34%29"></polygon></svg>');
	background-size: 9px 6px;
	background-position: right center;
	background-origin: content-box;
	background-repeat: no-repeat;
	padding-right: ($small-space * 3);
}
fieldset {
    margin-bottom: $medium-space;
	border: 0;
    margin: 0;
    padding: 0;
}
legend {
    font-size: $body-font-size;
    font-weight: 500;
    margin-bottom: $medium-space;
    box-sizing: border-box;
    color: inherit;
    display: table;
    max-width: 100%;
    padding: 0;
    white-space: normal;
}
// styling inputs further
// if you want an icon on your select initially, you're covered
.select-wrapper {
	&:before {
		font-size: rem-calc(16);
		font-family: 'FontAwesome';
		position: absolute;
		left: ($small-space * 3);
		top: 11px;
		color: $primary;
		z-index: 10;
	}
	// set a class name, with a matching icon (Font Awesome)
	&.location:before {
		content: '\f041';
	}
	// pad out the select so the icon has room
	select {
		padding-left: ($small-space * 7);
		width: 100%;
	}
}
//checkbox & radio
.control {
	display: inline-block;
	position: relative;
	padding-left: ($large-space - $small-space);
	margin-bottom: ($small-space * 3);
	cursor: pointer;
	font-size: rem-calc(12);
	padding-top: 3px;
	width: $medium-space;
	height: $medium-space;
	input {
		position: absolute;
		z-index: -1;
		left: 0;
		opacity: 0;
		margin-bottom: 0;
		&:disabled ~ .checky:after {
			border-color: $light;
		}
	}
	// for radio buttons
	&.radio {
		.checky {
			border-radius: 50%;
			&:after {
				left: $small-space;
				top: $small-space;
				width: 6px;
				height: 6px;
				border-radius: 50%;
				background: #ffffff;
			}
		}
	}
	.checky {
		position: absolute;
		top: 0;
		left: 0;
		height: $medium-space;
		width: $medium-space;
		background: #ffffff;
		border: 1px solid $light;
		&:after {
			content: '';
			position: absolute;
			display: none;
			left: 6px;
			top: 2px;
			width: $small-space;
			height: ($small-space * 2);
			border: solid #fff;
			border-width: 0 2px 2px 0;
			transform: rotate(45deg);
		}
	}
	&:hover input ~ .checky {
		background: rgba($primary, 0.3);
	}
	input {
		&:focus ~ .checky {
			background: #ffffff;
		}
		&:checked ~ .checky {
			background: $primary;
			border: 1px solid $primary;
			&:after {
				display: block;
			}
		}
	}
	&:hover input:not([disabled]):checked ~ .checky {
		background: darken($primary, 10%);
	}
	input {
		&:checked:focus ~ .checky {
			background: $primary;
		}
		&:disabled ~ .checky {
			background: #e6e6e6;
			opacity: 0.6;
			pointer-events: none;
		}
	}
}
// toggle switch
.checkSwitch {
	-webkit-appearance: none;
	-moz-appearance: none;
	transition: .4s all;
	margin: 0 ($small-space * 3) 0 0;
	border-radius: ($small-space * 10);
	background: lighten($light, 15%);
	width: ($small-space * 7);
	height: ($small-space * 3);
	outline: 0;
	cursor: pointer;
	position: relative;
	user-select: none;
	display: inline-block;
	top: $small-space;
}
/* switch background */
.checkSwitchInput {
	position: absolute;
	width: 0;
	height: 0;
	margin: 0;
	padding: 0;
	opacity: 0;
	appearance: none;
	border: none;
	&:checked ~ .checkSwitch {
		background: $primary;
		transition: .25s all;
		&.dark {
			background: darken($primary, 10%);
		}
		&::before {
			transform: translate(18px, 0);
			background: darken($primary, 10%);
		}
		&.dark::before {
			background: lighten($primary, 10%);
		}
	}
	~ .checkSwitch::before {
		content: '';
		transition: .26s all;
		position: absolute;
		left: 0px;
		top: -3px;
		bottom: 2px;
		right: auto;
		transform: translate(0, 0);
		display: block;
		width: $medium-space;
		height: $medium-space;
		border-radius: $large-space;
		background: lighten($primary, 15%);
	}
}
// file upload
.fileUploadHolder {
	width: auto;
	margin: $medium-space auto;
	text-align: center;
	.fileInput + label {
		display: inline-block;
		width: auto;
		margin-top: 0;
		vertical-align: top;
		padding: 0;
		background: none;
		font-weight: 600;
		color: $light;
		&.hasFile {
			color: $body-font-color;
		}
	}
}
// Cfile upload button
.fileInput {
	width: 0.1px!important;
	height: 0.1px!important;
	opacity: 0;
	overflow: hidden;
	position: absolute;
	z-index: -1;
	+ label {
		opacity: 1;
		text-overflow: ellipsis;
		white-space: nowrap;
		cursor: pointer;
		display: inline-block;
		overflow: hidden;
		padding: ($small-space * 2);
		margin-top: ($small-space * 3);
		width: auto;
		max-width: 300px;
		text-align: left;
		color: #ffffff;
		text-transform: none;
		background-color: $primary;
		transition: background 250ms ease-in-out;
		// Containing the text
		span {
			font-size: rem-calc(13) !important;
		}
		strong {
			font-style: italic;
			color: darken($primary, 25%);
		}
		&:focus + label,
		&.has-focus + label,
		+ label:hover {
			background-color: $primary;
		}
		* {
			pointer-events: none;
		}
	}
}
