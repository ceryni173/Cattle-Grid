// if you want an icon on your select initially, use this
.select-wrapper {
	&:before {
		font-size: rem-calc(16);
		font-family: 'FontAwesome';
		position: absolute;
		left: ($small-space * 3);
		top: 11px;
		color: $primary;
		z-index: 10;
	}

	// set a class name, with a matching icon (Font Awesome)
	&.name:before {
		content: '\f041';
	}

	// pad out the select so the icon has room
	select {
		padding-left: ($small-space * 7);
		padding-right: ($small-space * 3);
		width: 100%;
		height: $input-height;
		border: 1px solid $light;
		margin: 0 0 1.14286rem;
		font-size: rem-calc(12);
		font-family: inherit;
		line-height: normal;
		color: $body-font-color;
		background-color: #ffffff;
		-webkit-appearance: none;
		-moz-appearance: none;
		background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="32" height="24" viewBox="0 0 32 24"><polygon points="0,0 32,0 16,24" style="fill: rgb%2834, 34, 34%29"></polygon></svg>');
		background-size: 9px 6px;
		background-position: right center;
		background-origin: content-box;
		background-repeat: no-repeat;
	}
}

//checkbox & radio
.control {
	display: inline-block;
	position: relative;
	padding-left: ($large-space - $small-space);
	margin-bottom: ($small-space * 3);
	cursor: pointer;
	font-size: rem-calc(12);
	padding-top: 3px;
	width: $medium-space;
	height: $medium-space;
	input {
		position: absolute;
		z-index: -1;
		left: 0;
		opacity: 0;
		margin-bottom: 0;
		&:disabled ~ .checky:after {
			border-color: $light;
		}
	}

	// for radio buttons
	&.radio {
		.checky {
			border-radius: 50%;
			&:after {
				left: $small-space;
				top: $small-space;
				width: 6px;
				height: 6px;
				border-radius: 50%;
				background: #ffffff;
			}
		}
	}
	.checky {
		position: absolute;
		top: 0;
		left: 0;
		height: $medium-space;
		width: $medium-space;
		background: #ffffff;
		border: 1px solid $light;
		&:after {
			content: '';
			position: absolute;
			display: none;
			left: 6px;
			top: 2px;
			width: $small-space;
			height: ($small-space * 2);
			border: solid #fff;
			border-width: 0 2px 2px 0;
			transform: rotate(45deg);
		}

	}
	&:hover input ~ .checky {
		background: rgba($primary, 0.3);
	}
	input {
		&:focus ~ .checky {
			background: #ffffff;
		}
		&:checked ~ .checky {
			background: $primary;
			border: 1px solid $primary;
			&:after {
				display: block;
			}
		}
	}
	&:hover input:not([disabled]):checked ~ .checky {
		background: darken($primary, 10%);
	}
	input {
		&:checked:focus ~ .checky {
			background: $primary;
		}
		&:disabled ~ .checky {
			background: #e6e6e6;
			opacity: 0.6;
			pointer-events: none;
		}
	}
}

// toggle switch
.checkSwitch {
	-webkit-appearance: none;
	-moz-appearance: none;
	transition: .4s all;
	margin: 0 ($small-space * 3) 0 0;
	border-radius: ($small-space * 10);
	background: lighten($light, 15%);
	width: ($small-space * 7);
	height: ($small-space * 3);
	outline: 0;
	cursor: pointer;
	position: relative;
	user-select: none;
	display: inline-block;
	top: $small-space;
}

/* switch background */
.checkSwitchInput {
	position: absolute;
	width: 0;
	height: 0;
	margin: 0;
	padding: 0;
	opacity: 0;
	appearance: none;
	border: none;
	&:checked ~ .checkSwitch {
		background: $primary;
		transition: .25s all;
		&.dark {
			background: darken($primary, 10%);
		}
		&::before {
			transform: translate(18px, 0);
			background: darken($primary, 10%);

		}
		&.dark::before {
			background: lighten($primary, 10%);
		}
	}
	~ .checkSwitch::before {
		content: '';
		transition: .26s all;
		position: absolute;
		left: 0px;
		top: -3px;
		bottom: 2px;
		right: auto;
		transform: translate(0, 0);
		display: block;
		width: $medium-space;
		height: $medium-space;
		border-radius: $large-space;
		background: lighten($primary, 15%);
	}
}

// image filters
.imgFilter {
	display: inline-block;
	img {
		display: block;
		width: 100%;
		height: auto;
	}
	&.overlay {
		&:after {
			@include pseudo;
			top: 0;
			left: 0;
			background-color: rgba(#000, 0.5);
			width: 100%;
			height: 100%;
		}
	}
	&.greyScale {
		filter: grayscale(100%)
	}
	&.blur {
		filter: blur(#{$small-space});
	}
}


// to debug any element
.debug {
	* {
		border: 1px solid red;
	}
}
