//checkbox & radio
.control {
	display: block;
	position: relative;
	padding-left: ($large-space - $small-space);
	margin-bottom: ($small-space * 3);
	cursor: pointer;
	font-size: rem-calc(12px);
	padding-top: 3px;
	margin-left: 7px;
	input {
		position: absolute;
		z-index: -1;
		opacity: 0;
		margin-bottom: 0;
		&:disabled ~ .checky:after {
			border-color: #7b7b7b;
		}
	}
	&.radio {
		.checky {
			border-radius: 50%;
			&:after {
				left: 6px;
				top: 6px;
				width: $small-space;
				height: $small-space;
				border-radius: 50%;
				background: #ffffff;
			}
		}
	}
	.checky {
		position: absolute;
		top: -7px;
		left: 0;
		height: 30px;
		width: 30px;
		background: #ffffff;
		border: 1px solid #cccccc;
		&:after {
			content: '';
			position: absolute;
			display: none;
			left: 10px;
			top: 4px;
			width: 8px;
			height: 17px;
			border: solid #fff;
			border-width: 0 3px 3px 0;
			transform: rotate(45deg);
		}

	}
	&:hover input ~ .checky {
		background: rgba($primary, 0.3);
	}
	input {
		&:focus ~ .checky {
			background: #ffffff;
		}
		&:checked ~ .checky {
			background: $primary;
			border: 1px solid $primary;
			&:after {
				display: block;
			}
		}
	}
	&:hover input:not([disabled]):checked ~ .checky {
		background: darken($primary, 10%);
	}
	input {
		&:checked:focus ~ .checky {
			background: $primary;
		}
		&:disabled ~ .checky {
			background: #e6e6e6;
			opacity: 0.6;
			pointer-events: none;
		}
	}
}

// To use:
// <label class="control" for="">
// 	<input type="checkbox" id="" name="" value="" />
// 	<div class="checky"></div>
// 	<span class="fa fa-check"></span>
// </label>



// toggle switch
.toggleSwitch {
	margin-top: $medium-space;
	input[type="checkbox"] {
		&.switch {
			position: absolute;
			opacity: 0;
			+ div {
				vertical-align: middle;
				width: $large-space;
				height: $medium-space;
				border-radius: 999px;
				background-color: $primary;
				transition-duration: .4s;
				transition-property: background-color, box-shadow;
				cursor: pointer;
				span {
					position: absolute;
					font-size: rem-calc(14);
					color: #ffffff;
					top: 50%;
					transform: translateY(-50%);
					&:nth-child(1) {
						left: ($small-space * 3);
					}
					&:nth-child(2) {
						right: ($small-space * 3);
					}
				}
			}
			&:checked {
				+ div {
					width: ($large-space * 2);
					background-position: 0 0;
					background-color: $primary;
				}
				+ div {
					background-color: $secondary;
				}
				+ div > div {
					transform: translateY(-50%) translate3d(#{$medium-space}, 0, 0);
					background-color: #ffffff;
				}
			}
			+ div {
				width: ($large-space * 2);
				height: $large-space;
			}
			+ div > div {
				float: left;
				width: ($large-space - $small-space);
				height: ($large-space - $small-space);
				border-radius: inherit;
				background: #ffffff;
				transition-timing-function: cubic-bezier(1, 0, 0, 1);
				transition-duration: 0.4s;
				transition-property: transform, background-color;
				pointer-events: none;
				top: 50%;
				transform: translateY(-50%);
				margin-left: $small-space;
			}
		}
		&.switch:checked + div > div {
			transform: translateY(-50%) translate3d(#{($large-space - $small-space)}, 0, 0);
		}
	}
}


.debug {
	* {
	    border: 1px solid red;
	}
}
